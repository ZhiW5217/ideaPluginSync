<application>
  <component name="AppStorage">
    <histories>
      <item value="Adds a one-timelistener function for the event named eventName. The next time eventName is triggered, this listener is removed and then invoked. server.once('connection', (stream) =&gt; { console.log('Ah, we have our first user!'); }); Returns a reference to the EventEmitter, so that calls can be chained. By default, event listeners are invoked in the order they are added. Theemitter.prependOnceListener() method can be used as an alternative to add the event listener to the beginning of the listeners array. const myEE = new EventEmitter(); myEE.once('foo', () =&gt; console.log('a')); myEE.prependOnceListener('foo', () =&gt; console.log('b')); myEE.emit('foo'); Prints: b a 形参: eventName – The name of the event. listener – The callback function Since: v0.3.0" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1" />
        <entry key="ENGLISH" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1653041057965" />
  </component>
</application>